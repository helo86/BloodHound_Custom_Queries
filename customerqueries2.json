{
    "queries": [
        {
            "name": "List all owned USERS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (m:User) WHERE m.owned=TRUE RETURN m"
                }
            ]
        },
        {
            "name": "List all owned COMPUTERS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (m:Computer) WHERE m.owned=TRUE RETURN m"
                }
            ]
        },
        {
            "name": "List all owned GROUPS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (m:Group) WHERE m.owned=TRUE RETURN m"
                }
            ]
        },
        {
            "name": "List all high valued Targets",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (m) WHERE m.highvalue=TRUE RETURN m"
                }
            ]
        },
        {
            "name": "List the GROUPS of all owned USERS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (m:User) WHERE m.owned=TRUE WITH m MATCH p=(m)-[:MemberOf*1..]->(n:Group) RETURN p"
                }
            ]
        },
        {
            "name": "Find if unprivileged USERS have rights to add members into GROUPS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n:User {admincount:False}) MATCH p=allShortestPaths((n)-[r:AddMember*1..]->(m:Group)) RETURN p"
                }
            ]
        },
        {
            "name": "Find COMPUTER where SPN contains 'SQL'",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (c:Computer) WHERE ANY (x IN c.serviceprincipalnames WHERE toUpper(x) CONTAINS 'SQL') RETURN c"
                }
            ]
        },
        {
            "name": "Find COMPUTER where SPN contains 'DC'",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (c:Computer) WHERE ANY (x IN c.serviceprincipalnames WHERE toUpper(x) CONTAINS 'DC') RETURN c"
                }
            ]
        },
        {
            "name": "List all GROUPS that contain the word 'admin'",
            "queryList": [
                {
                    "final": true,
                    "query": "Match (n:Group) WHERE n.name CONTAINS 'ADMIN' RETURN n"
                }
            ]
        },
        {
            "name": "View all high value target's GROUPS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(n:User)-[r:MemberOf*1..]->(m:Group {highvalue:true}) RETURN p"
                }
            ]
        },
        {
            "name": "Find GROUPS that contain both USERS and COMPUTERS",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (c:Computer)-[r:MemberOf*1..]->(groupsWithComps:Group) WITH groupsWithComps MATCH (u:User)-[r:MemberOf*1..]->(groupsWithComps) RETURN DISTINCT(groupsWithComps) as groupsWithCompsAndUsers"
                }
            ]
        },
        {
            "name": "View all GPOs",
            "queryList": [
                {
                    "final": true,
                    "query": "Match (n:GPO) RETURN n"
                }
            ]
        },
        {
            "name": "Find if any domain USER has permissions against a GPO",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:User)-[r:MemberOf|HasSession|AdminTo|AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|CanRDP|ExecuteDCOM|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|SQLAdmin|ReadGMSAPassword|HasSIDHistory|CanPSRemote|AZAddMembers|AZContains|AZContributor|AZGetCertificates|AZGetKeys|AZGetSecrets|AZGlobalAdmin|AZOwns|AZPrivilegedRoleAdmin|AZResetPassword|AZUserAccessAdministrator|AZAppAdmin|AZCloudAppAdmin|AZRunsAs|AZKeyVaultContributor*1..]->(g:GPO) RETURN p"
                }
            ]
        },
        {
            "name": "Find if any domain COMPUTER has permissions against a GPO",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(c:Computer)-[r:MemberOf|HasSession|AdminTo|AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|CanRDP|ExecuteDCOM|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|SQLAdmin|ReadGMSAPassword|HasSIDHistory|CanPSRemote|AZAddMembers|AZContains|AZContributor|AZGetCertificates|AZGetKeys|AZGetSecrets|AZGlobalAdmin|AZOwns|AZPrivilegedRoleAdmin|AZResetPassword|AZUserAccessAdministrator|AZAppAdmin|AZCloudAppAdmin|AZRunsAs|AZKeyVaultContributor*1..]->(g:GPO) RETURN p"
                }
            ]
        },
        {
            "name": "Find all computers with UNCONSTRAINED DELEGATION",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (c:Computer {unconstraineddelegation:true}) return c"
                }
            ]
        },
        {
            "name": "Find CONSTRAINED DELEGATION",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:User)-[:AllowedToDelegate]->(c:Computer) RETURN p"
                }
            ]
        },
        {
            "name": "Find COMPUTERS with CONSTRAINED DELEGATION permissions and the corresponding targets where they allowed to delegate",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (c:Computer) WHERE c.allowedtodelegate IS NOT NULL RETURN c"
                }
            ]
        },
        {
            "name": "Find OBJECT in one domain with rights to foreign OBJECT",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(n)-[r]->(m) WHERE NOT n.domain = m.domain RETURN p"
                }
            ]
        },
        {
            "name": "Find OBJECT from domain 'A' that can do anything to a foreign OBJECT",
            "requireNodeSelect": true,
            "queryList": [
                {
                    "final": false,
                    "title": "Select source domain...",
                    "query": "MATCH (n:Domain) RETURN n.name ORDER BY n.name"
                },
                {
                    "final": true,
                    "query": "MATCH p=(n {domain:$result})-[r]->(d) WHERE NOT d.domain=n.domain RETURN p",
                    "startNode": "{}",
                    "allowCollapse": false
                }
            ]
        },
        {
            "name": "Find special ACLs User -> User",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:User) - [r:AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|ReadGMSAPassword|HasSIDHistory] -> (n:User) RETURN p"
                }
            ]
        },
        {
            "name": "Find special ACLs User -> Groups",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:User) - [r:AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|ReadGMSAPassword|HasSIDHistory] -> (g:Group) RETURN p"
                }
            ]
        },
        {
            "name": "Find special ACLs User -> Computer",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:User) - [r:AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|ReadGMSAPassword|HasSIDHistory] -> (g:Computer) RETURN p"
                }
            ]
        },
        {
            "name": "Find special ACLs Group -> User",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:Group) - [r:AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|ReadGMSAPassword|HasSIDHistory] -> (n:User) RETURN p"
                }
            ]
        },
        {
            "name": "Find special ACLs Group -> Groups",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:Group) - [r:AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|ReadGMSAPassword|HasSIDHistory] -> (g:Group) RETURN p"
                }
            ]
        },
        {
            "name": "Find special ACLs Group -> Computer",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:Group) - [r:AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|ReadGMSAPassword|HasSIDHistory] -> (g:Computer) RETURN p"
                }
            ]
        },
        {
            "name": "Find special ACLs Computer -> User",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:Computer) - [r:AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|ReadGMSAPassword|HasSIDHistory] -> (n:User) RETURN p"
                }
            ]
        },
        {
            "name": "Find special ACLs Computer -> Groups",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:Computer) - [r:AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|ReadGMSAPassword|HasSIDHistory] -> (g:Group) RETURN p"
                }
            ]
        },
        {
            "name": "Find special ACLs Computer -> Computer",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:Computer) - [r:AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|ReadGMSAPassword|HasSIDHistory] -> (g:Computer) RETURN p"
                }
            ]
        },
        {
            "name": "Find all connection possibilities User -> Computer",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:User) - [r:HasSession|CanRDP|AdminTo|CanRDP|CanPSRemote|ExecuteDCOM|SQLAdmin] -> (n:Computer) RETURN p"
                }
            ]
        },
        {
            "name": "Find all connection possibilities Group -> Computer",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(g:Group) - [r:HasSession|CanRDP|AdminTo|CanRDP|CanPSRemote|ExecuteDCOM|SQLAdmin] -> (n:Computer) RETURN p"
                }
            ]
        },
        {
            "name": "Find all connection possibilities Computer -> Computer",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u:Computer) - [r:HasSession|CanRDP|AdminTo|CanRDP|CanPSRemote|ExecuteDCOM|SQLAdmin] -> (n:Computer) RETURN p"
                }
            ]
        }
    ]
}
